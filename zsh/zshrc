#
# .zshrc is sourced in interactive shells.
# It should contain commands to set up aliases,
# functions, options key bindings, etc.


#####################
# homebrew
#####################
# {{{ homebrew
# TODO: macosに依存しないようにしたい
eval "$(/opt/homebrew/bin/brew shellenv)" # for m1
BREW_PREFIX=$(brew --prefix) # homebrewの挙動を変えないためにHOMEBREW_PREFIXは使わない
# }}}


#####################
# export variables
#####################
# {{{ export
typeset -xU path fpath

path=( \
  $HOME/bin(N-/) \
  $HOME/.local/bin(N-/) \
  $HOME/.nodebrew/current/bin(N-/) \
  /usr/local/bin(N-/) \
  $path \
)

fpath=( \
  $ZDOTDIR/completion(N-/) \
  $fpath \
)

export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
export EDITOR='vim'
export LV="-c"

# pager
# LESS_TERMCAP_* can't seems to set in lesskey (and LESSHISTFILE too?)
# https://unix.stackexchange.com/a/377221
export PAGER='less'
export LESSKEY="$HOME/.less/key"
export LESSHISTFILE="$HOME/.less/hst"
export LESS_TERMCAP_mb=$'\e[36m'     # mode blink (cyan)
export LESS_TERMCAP_md=$'\e[34m'     # mode double-bright (blue)
export LESS_TERMCAP_me=$'\e[0m'      # mode end
export LESS_TERMCAP_so=$'\e[43;30m'  # stand-out mode (yellow/black)
export LESS_TERMCAP_se=$'\e[0m'      # stand-out mode end
export LESS_TERMCAP_us=$'\e[32m'     # underline start (green)
export LESS_TERMCAP_ue=$'\e[0m'      # underline end

# java & scala
export JAVA_OPTS="$JAVA_OPTS -Dfile.encoding=UTF-8"
export SBT_OPTS="$SBT_OPTS -Dfile.encoding=UTF-8"
export SBT_OPTS="$SBT_OPTS -Xms1024m -Xmx1024m -XX:+CMSClassUnloadingEnabled"

# haskell
path=($(stack path --compiler-bin)(N-/) $path) # for hdevtools

# misc
export ZPLUG_HOME="$BREW_PREFIX/opt/zplug"
export GIBO_BOILERPLATES="$HOME/.config/git/ignore-boilerplates"
export NODE_REPL_HISTORY="$HOME/.history/node_repl_history"
# }}}


#####################
# aliases
#####################
# {{{ aliases
alias ls='ls -G'
alias ll='ls -la'
alias dstat-full='dstat -Tclmdrn'
alias dstat-mem='dstat -Tclm'
alias dstat-cpu='dstat -Tclr'
alias dstat-net='dstat -Tclnd'
alias dstat-disk='dstat -Tcldr'
alias vg="vagrant"
alias zshtime='for i in $(seq 1 10); do time zsh -i -c exit; done'
alias ack-pager="ack --pager=$PAGER"

# scala
SCALA_REPL_HISTORY="$HOME/.history/scala_history"
SCALA_REPL_OPTS="-Dscala.color -Dscala.shell.histfile=${SCALA_REPL_HISTORY}"
alias scala="scala $SCALA_REPL_OPTS"
alias sbt-init="sbt new scala/scala3.g8"
alias akka-init="sbt new akka/akka-quickstart-scala.g8"
alias android-init="sbt new akiomik/android-pfn-app -b feature/upgrade-sbt-version"
alias play-init="sbt new playframework/play-scala-seed.g8"
alias finch-init="sbt new finch/finch.g8"
# }}}


#####################
# complete
#####################
# {{{ complete
# NOTE: compinit is loaded by zplug
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'
setopt complete_in_word
setopt correct
setopt auto_pushd
setopt auto_list
setopt list_types
setopt auto_menu
zstyle ':completion:*:default' menu select=1
zstyle ':completion:*' verbose yes
zstyle ':completion:*' format '%B%d%b'
zstyle ':completion:*:warnings' format 'No matches for: %d'
zstyle ':completion:*' group-name ''
# }}}


#####################
# colors
#####################
# {{{ colors
LS_COLORS='di=00;34'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
# }}}


#####################
# functions
#####################
# {{{ functions
function load-if-exists() { [ -f "$1" ] && source "$1" }
function urlencode { node -p "encodeURIComponent('$1')" }
# }}}


#####################
# prompt
#####################
# {{{ prompt
eval "$(starship init zsh)"

setopt prompt_subst
SPROMPT="%F{magenta}correct: %R -> %r [n/y/a/e]? %f"
RPROMPT='$(git branch-status --mode zsh)'
# }}}


#####################
# history
#####################
# {{{ history
HISTFILE=$ZDOTDIR/zsh_history
HISTSIZE=100000
SAVEHIST=100000
setopt extended_history
setopt share_history
setopt hist_ignore_dups
# setopt append_history
# setopt inc_append_history
# }}}


#####################
# vim key bind
#####################
# {{{ vim key bind
bindkey -v
zle -A .backward-kill-word vi-backward-kill-word
zle -A .backward-delete-char vi-backward-delete-char

# additional vim keybinds
# -v is insert mode.
# -a is command mode.
bindkey -v '^a' vi-beginning-of-line
bindkey -v '^e' vi-end-of-line
bindkey -v '^u' kill-whole-line

# show command line stack
show_buffer_stack() {
  POSTDISPLAY="
stack: $LBUFFER"
  zle push-line-or-edit
}
zle -N show_buffer_stack
setopt noflowcontrol
bindkey -v '^s' show_buffer_stack
# }}}


#####################
# others
#####################
# {{{ others
# setopt no_beep
# setopt hub
# setopt nobgnice

# zmv
autoload -Uz zmv
alias zmv='noglob zmv -W'

# zargs
autoload zargs

# for ssh-agent
ssh_auth_sock="$HOME/.ssh/ssh_auth_sock"
if [ -n "$SSH_AUTH_SOCK" ] && [ "$SSH_AUTH_SOCK" != "$ssh_auth_sock" ]; then
  echo "old SSH_AUTH_SOCK is $SSH_AUTH_SOCK"
  echo "new SSH_AUTH_SOCK is $ssh_auth_sock"
  ln -sf $SSH_AUTH_SOCK $ssh_auth_sock && SSH_AUTH_SOCK=$ssh_auth_sock
fi

# rust
. "$HOME/.cargo/env"
# }}}


#####################
# other sources
#####################
# {{{ other sources
case ${OSTYPE} in
  darwin*)
    load-if-exists $ZDOTDIR/.zshrc.osx
  ;;
  linux*)
    load-if-exists $ZDOTDIR/.zshrc.linux
  ;;
esac
load-if-exists $ZDOTDIR/.zshrc.local
# }}}


#####################
# plugins
#####################
# {{{ plugins
source $ZPLUG_HOME/init.zsh # zplug

zplug 'b4b4r07/peco-tmux.sh', \
  as:command, \
  use:'(*).sh', \
  rename-to:'$1'

zplug 'b4b4r07/emoji-cli'
export EMOJI_CLI_FILTER="peco-tmux:peco"
export EMOJI_CLI_KEYBIND="^k"

if ! zplug check; then
  zplug install
fi

zplug load

# NOTE: fixing `(eval):setopt:3: no such option: NO_warnnestedvar`
#       このエラーはtmux外とtmuxで引き継いでいる環境変数が違うことに起因している
_comp_options=(${_comp_options/NO_warnnestedvar/})
# }}}
