#####################
# other sources
#####################
# {{{ other sources
load-if-exists /opt/boxen/env.sh
load-if-exists /opt/boxen/nvm/nvm.sh
# }}}

#####################
# export variables
#####################
# {{{ export
export DYLD_LIBRARY_PATH=`brew --prefix`/Cellar/openni/stable-1.5.2.23/lib:$DYLD_LIBRARY_PATH    # for openni
export DYLD_LIBRARY_PATH=/Library/LeapDeveloperKit/LeapSDK/lib/:$DYLD_LIBRARY_PATH  # for leap motion
export PATH="$HOME/bin/mkscaladocset:$PATH"
export PATH=`brew --prefix`/share/git-core/contrib/diff-highlight:$PATH
export ANDROID_HOME=$(brew --prefix android-sdk)
# }}}


#####################
# aliases
#####################
# aliases {{{
alias ls='ls -G'
alias top="htop"
# }}}


#####################
# vi mode line
#####################
# {{{ vim mode line
# Reads until the given character has been entered.
readuntil() {
    typeset a
    while [ "$a" != "$1" ]
    do
        read -E -k 1 a
    done
}

# displays the vi mode, specified by the $1 variable, under the current command line.
showmode() {
    typeset movedown
    typeset row

    # get number of lines down to print mode
    movedown=$(($(echo "$RBUFFER" | wc -l)))

    # get current row position
    echo -n "\e[6n"
    row="${${$(readuntil R)#*\[}%;*}"

    # Are we at the bottom of the terminal?
    if [ $((row+movedown)) -gt "$LINES" ]; then
        # Scroll terminal up one line
        echo -n "\e[1S"

        # Move cursor up one line
        echo -n "\e[1A"
    fi

    # save cursor position
    echo -n "\e[s"

    # move cursor to start of line $movedown lines down
    echo -n "\e[$movedown;E"
    echo -n "\e[${LINES};${movedown}H"

    # change font attributes(bold or hilight)
    echo -n "\e[1m"

    # print mode line or clear mode line
    if [ -n "$1" ]; then
        echo -n "-- $1 --"
    else
        echo -n "\e[0K"
    fi

    # restore font and cursor position
    echo -n "\e[0m"
    echo -n "\e[u"
}

function zle-line-init zle-keymap-select {
    vimode="${${KEYMAP/vicmd/NORMAL}/(main|viins)/INSERT}"

    # update status line
    if [ -n "$TMUX" ]; then
        # tmux
        if [ $vimode = "NORMAL" ]; then
            statbg="colour236"
            statfg="colour247"
            statl1bg="colour240"
            statl1fg="colour231"
            statl2bg="colour148"
            statl2fg="colour22"
            statr1bg="colour240"
            statr1fg="colour247"
            statr2bg="colour252"
            statr2fg="colour236"
        else
            statbg="colour24"
            statfg="colour117"
            statl1bg="colour31"
            statl1fg="colour231"
            statl2bg="colour231"
            statl2fg="colour23"
            statr1bg="colour31"
            statr1fg="colour117"
            statr2bg="colour117"
            statr2fg="colour23"
        fi
        tmux set -g status-bg ${statbg} > /dev/null
        tmux set -g status-fg ${statfg} > /dev/null
        statl1="#[bg=${statl1bg}, fg=${statl1fg}] #H "
        statl1a="#[bg=${statbg}, fg=${statl1bg}]⮀"
        statl2="#[bg=${statl2bg}, fg=${statl2fg}] $vimode "
        statl2a="#[bg=${statl1bg}, fg=${statl2bg}]⮀"
        tmux set -g status-left "${statl2}${statl2a}${statl1}${statl1a}" > /dev/null
        statr1="#[bg=${statr1bg}, fg=${statr1fg}] #($HOME/.battery) "
        statr1a="#[bg=${statbg}, fg=${statr1bg}]⮂"
        statr2="#[bg=${statr2bg}, fg=${statr2fg}] %Y-%m-%d(%a) %H:%M "
        statr2a="#[bg=${statr1bg}, fg=${statr2bg}]⮂"
        tmux set -g status-right "${statr1a}${statr1}${statr2a}${statr2}" > /dev/null
    else
        # zsh
        # showmode $vimode
    fi
}
zle -N zle-line-init
zle -N zle-keymap-select
# }}}


#####################
# others
#####################
# {{{ others
# for z
load-if-exists `brew --prefix`/etc/profile.d/z.sh && {
    function precmd_z() { _z --add "$(pwd -P)" }
    add-zsh-hook precmd precmd_z
}
# for japanese
setopt COMBINING_CHARS
# }}}

