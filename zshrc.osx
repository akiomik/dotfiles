#####################
# other sources
#####################
# {{{ other sources
load-if-exists /opt/boxen/env.sh
load-if-exists /opt/boxen/nvm/nvm.sh
# }}}


#####################
# export variables
#####################
# {{{ export
export PATH=/Library/Ruby/Gems/1.8/gems/CoffeeTags-0.0.3.0/bin:$PATH       # for coffeetags
export RUBYLIB=/Library/Ruby/Gems/1.8/gems/CoffeeTags-0.0.3.0/lib:$RUBYLIB
export PATH="$HOME/bin/mkscaladocset:$PATH"
export PATH=`brew --prefix`/share/git-core/contrib/diff-highlight:$PATH
export FPATH="$(brew --prefix)/share/zsh/functions:$FPATH"

# }}}


#####################
# aliases
#####################
# aliases {{{
alias ls='ls -G'
alias top="htop"
alias cs="$(brew --prefix giter8)/libexec/conscript/bin/cs" # conscript
# }}}


#####################
# vi mode line
#####################
# {{{ vim mode line
# hook visual mode keymap
# TODO: 移動系のキーは除外する
# bindkey -M vicmd | while read key widget;
# do
#   key=$(echo $key | sed 's/^"\(.*\)"$/\1/')
#
#   if [ "$key" = '"' ]; then
#     # when key is space
#     widget=$(echo $widget | sed 's/^" //' )
#     key=" "
#   elif [ "$key" = '-' ]; then
#     # when key is flag
#     key='\-'
#   fi
#
#   if [ "$widget" = "visual-mode" ]; then
#     # TODO: VISUAL時にvでNORMALに戻るようにする
#     mode="VISUAL"
#   else
#     mode="NORMAL"
#   fi
#
#   wrapper="${widget}-wrap"
#   eval "function $wrapper {
#     _update-status-line $mode
#     zle $widget
#   }"
#   zle -N $wrapper
#   bindkey -a $key $wrapper
# done

# set normal and insert mode
function zle-line-init zle-keymap-select {
    vimode="${${KEYMAP/vicmd/NORMAL}/(main|viins)/INSERT}"
    _update-status-line $vimode
}

# update status line
function _update-status-line {
  vimode=$1

  if [ -n "$TMUX" ]; then
      # tmux
      statfg="colour7"
      statbg="colour0"
      statl1fg="colour15"
      statl1bg="colour8"
      statl2fg="colour234"
      statl2bg="colour10"
      statr1fg="colour234"
      statr1bg="colour7"
      statr2fg="colour234"
      statr2bg="colour7"

      if [ $vimode = "NORMAL" ]; then
          statl2bg="colour10"
      elif [ $vimode = "VISUAL" ]; then
          statl2bg="colour3"
      else
          statl2bg="colour12"
      fi

      tmux set -g status-bg ${statbg} > /dev/null
      tmux set -g status-fg ${statfg} > /dev/null
      statl1="#[bg=${statl1bg}, fg=${statl1fg}] #H "
      statl1a="#[bg=${statbg}, fg=${statl1bg}]"
      statl2="#[bg=${statl2bg}, fg=${statl2fg}] $vimode "
      statl2a="#[bg=${statl1bg}, fg=${statl2bg}]"
      tmux set -g status-left "${statl2}${statl2a}${statl1}${statl1a}" > /dev/null
      statr1="#[bg=${statr1bg}, fg=${statr1fg}] #($HOME/bin/battery) "
      statr1a="#[bg=${statbg}, fg=${statr1bg}]"
      statr2="#[bg=${statr2bg}, fg=${statr2fg}] %Y-%m-%d(%a) %H:%M "
      statr2a="#[bg=${statr1bg}, fg=${statr2bg}]"
      tmux set -g status-right "${statr1a}${statr1}${statr2a}${statr2}" > /dev/null
  fi
 }

zle -N zle-line-init
zle -N zle-keymap-select
# }}}


#####################
# others
#####################
# {{{ others
# for japanese
setopt COMBINING_CHARS

# added by travis gem
[ -f /Users/akiomi/.travis/travis.sh ] && source /Users/akiomi/.travis/travis.sh
# }}}

